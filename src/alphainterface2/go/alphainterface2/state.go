// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package alphainterface2
import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type Immutablealphainterface2State struct {
	id int32
}

func (s Immutablealphainterface2State) Crops() ArrayOfImmutableCrop {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateCrops], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableCrop{objID: arrID}
}

func (s Immutablealphainterface2State) Orders() ArrayOfImmutableOrder {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateOrders], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableOrder{objID: arrID}
}

func (s Immutablealphainterface2State) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s Immutablealphainterface2State) Wallets() ArrayOfImmutableWallet {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateWallets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableWallet{objID: arrID}
}

type Mutablealphainterface2State struct {
	id int32
}

func (s Mutablealphainterface2State) Crops() ArrayOfMutableCrop {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateCrops], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableCrop{objID: arrID}
}

func (s Mutablealphainterface2State) Orders() ArrayOfMutableOrder {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateOrders], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableOrder{objID: arrID}
}

func (s Mutablealphainterface2State) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s Mutablealphainterface2State) Wallets() ArrayOfMutableWallet {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateWallets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableWallet{objID: arrID}
}
