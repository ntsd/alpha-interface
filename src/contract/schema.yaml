name: AlphaInterfaceContract
description: AlphaInterfaceContract description
structs:
  Crop:
    idx: Int32 // crop index
    name: String // name of the crop
    country: String // the country name
    yield: Int64 // yield value of the crop unit hectogram (100 grammes) per hectare
    updatedAt: Int64 // unix timestamp
  Position:
    idx: Int32 // position index
    cropIdx: Int32 // crop index
    type: String // short, long
    averagePrice: Int64 // price of the position
    amount: Int64 // amount of position
    status: String // position status (opening, closing, closed, liquidated)
    owner: AgentID // agent id of the owner
  Order:
    idx: Int32 // order index
    positionIdx: Int32 // position index
    cropIdx: Int32 // crop index
    type: String // short, long
    curAmount: Int64 // cur order amount of the order in IOTA
    fullAmount: Int64 // full amount
    status: String // order status (opening, matched, canceled)
    owner: AgentID // agent id of the owner
typedefs: {}
state:
  owner: AgentID // current owner of this smart contract
  crops: Crop[] // crop array
  positions: Position[] // position array
  orders: Order[] // order array
funcs:
  init:
    params:
      owner: AgentID? // optional owner of this smart contract
  setOwner:
    access: owner // current owner of this smart contract
    params:
      owner: AgentID // new owner of this smart contract
  setCrop:
    access: owner // current owner of this smart contract
    params:
      name: String // name of the crop
      country: String // the country name
      yield: Int64 // yield value of the crop unit hectogram (100 grammes) per hectare
  createOrder:
    params:
      cropIdx: Int32 // crop index
      leverage: Int64 // 2, 4, 8
      type: String // short, long
  closeOrder:
    params:
      orderIdx: Int32 // order idx
  closePosition:
    params:
      positionIdx: Int32 // position id
      amount: Int64 // iota amount
views:
  getOwner:
    results:
      owner: AgentID // current owner of this smart contract
  getMyPositions:
    results:
      positions: Position[]
  getOrders:
    results:
      orders: Order[]
  getCrops:
    results:
      crops: Crop[]
  getCrop:
    params:
      cropIdx: Int32
    results:
      crop: Crop
